Esto saque de FlujoCuentasxCobrar.xhtml

 <p:commandButton actionListener="#{cxCFlujoBean.cargarTablaFlujo}" value="Generar" update="frmCxCFlujo:tablePivoteCxCFlujo"
          onstart="PF('blockUIWidget').block()" oncomplete="PF('blockUIWidget').unblock()" />


 <p:commandButton id="dynaButtonCxCFlujoFinanciero" value="Imprimir" type="button" icon="ui-icon-print" />
      <p:menu overlay="true" trigger="dynaButtonCxCFlujoFinanciero" my="left top" at="left bottom">
          <p:submenu label="Reporte en:">
              <p:menuitem value="EXCEL" icon="ui-icon-xls" actionListener="#{cxCFlujoBean.exportarExcelFlujoCxCFinanciero}"
                          ajax="false" />
          </p:submenu>
      </p:menu>



 <h:commandLink>
                    <p:graphicImage library="images"  name="pdf-icon.png" />
                    <p:dataExporter type="pdf" target="tablePivoteCxCFlujo" fileName="users" preProcessor="#{cxCFlujoBean.preProcessPDF}"/>
                </h:commandLink>

  int pos= strVal.indexOf(".", strVal.indexOf(".") + 1);
                      if (pos!=-1)
                      {
                          StringBuilder myNewVal = new StringBuilder(strVal);
                          myNewVal.setCharAt(pos,',');
                          //myNewVal.deleteCharAt(pos);
                          strVal=myNewVal.toString();
                      }

    PARA MANEJAR STREAM DE ROWS DENTRO DE UN ARCHIVO DE EXCEL

    //En esta seccion copiare mediante stream de una hoja a otra
        HSSFSheet sheet2 = wb.createSheet("DATOS");


            Stream<Row> rowStream = ConverterStream.asStreamRow(sheet.rowIterator());

            rowStream.skip(2).forEach(row->{


                HSSFRow headerInside=sheet2.createRow(row.getRowNum());


                Stream<Cell> cellStream2= ConverterStream.asStream(row.cellIterator());
                        cellStream2.forEach(cell->{
                                                    int k=cell.getColumnIndex();
                                                    HSSFCell cellNew= headerInside.createCell(k);
                                                    cellNew.setCellStyle(cell.getCellStyle());

                                    switch (cell.getCellType()) {
                                        case HSSFCell.CELL_TYPE_STRING:
                                            cellNew.setCellValue(cell.getStringCellValue());
                                            break;
                                        case HSSFCell.CELL_TYPE_NUMERIC:
                                            cellNew.setCellValue(cell.getNumericCellValue());
                                            break;
                                        case HSSFCell.CELL_TYPE_BLANK:
                                            cellNew.setCellValue(HSSFCell.CELL_TYPE_BLANK);
                                            break;
                                        case HSSFCell.CELL_TYPE_BOOLEAN:
                                            cellNew.setCellValue(cell.getBooleanCellValue());
                                            break;
                                    }

                                }
                                            );

            });

            wb.removeSheetAt(0);
