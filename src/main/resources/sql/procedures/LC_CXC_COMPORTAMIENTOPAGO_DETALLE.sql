SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE dbo.LC_CXC_COMPORTAMIENTOPAGO_DETALLE
(
@INVOICE nvarchar(20),
@GRUPO nvarchar(20),
@opcion int,
@fechas30P date= NULL,
@fechas45P date=NULL,
@fechas60P date=NULL,
@fechas90P date=NULL,
@fechas120P date=NULL,
@fechas150P date=NULL
)

AS
BEGIN
  SET NOCOUNT ON;
  
  DECLARE
  @ID INT,
  @ACCOUNTNUM nvarchar(20), 
  @VOUCHER nvarchar(20), 
  @OFFSETTRANSVOUCHER nvarchar(20),
  @SETTLEAMOUNTMST numeric(32, 16),
  @TRANSDATE datetime,
  @OFFSETRECID bigint,
  @intFlag INT, 
  @maxrownumber int,
  @resultFechaCobrada nvarchar(20);
  
    IF OBJECT_ID('tempdb..#TMPCXCCOMPORTAMIENTODETALLE') IS NOT NULL
    BEGIN
        DROP TABLE #TMPCXCCOMPORTAMIENTODETALLE
    END
    
    IF OBJECT_ID('tempdb..#TMPCXCCOMPORTAMIENTOOFFSETRECID') IS NOT NULL
    BEGIN
        DROP TABLE #TMPCXCCOMPORTAMIENTOOFFSETRECID
    END
    
    IF OBJECT_ID('tempdb..#TMPFECHASPAGADAS') IS NOT NULL
    BEGIN
        DROP TABLE #TMPFECHASPAGADAS
    END
    
    
    CREATE TABLE #TMPCXCCOMPORTAMIENTOOFFSETRECID
                ( 
                  ID int primary key IDENTITY(1,1) NOT NULL,
                  ACCOUNTNUM nvarchar(20),
                  INVOICE nvarchar(20),
                  OFFSETTRANSVOUCHER nvarchar(20),
                  VOUCHER nvarchar(20),
                  TXT  nvarchar(60),
                  TRANSRECID bigint,
                  TRANSDATE date,
                  SETTLEAMOUNTMST numeric(32, 16)
                  );
     
    
    CREATE TABLE #TMPFECHASPAGADAS
      (
      ID int primary key IDENTITY(1,1) NOT NULL,
      INVOICE nvarchar(20),
      VOUCHER nvarchar(20),
      TRANSDATE datetime,
      OFFSETTRANSVOUCHER nvarchar(20),
      SETTLEAMOUNTMST numeric(32, 16),
      TXT nvarchar(60),
      ROWNUMBER int,
      GRUPO nvarchar(20)
      );


   SELECT 
  CUSTTRANS.RECID,
  CUSTTRANS.TRANSTYPE,
  CUSTTRANS.ACCOUNTNUM,
  (SELECT VISTA_CANAL_CLIENTE.NOMBRECLIENTE FROM VISTA_CANAL_CLIENTE WHERE VISTA_CANAL_CLIENTE.ACCOUNTNUM = CUSTTRANS.ACCOUNTNUM) AS NOMBRECLIENTE,
  CUSTTRANS.VOUCHER,
  CUSTTRANS.INVOICE,  
  CUSTSETTLEMENT.OFFSETTRANSVOUCHER,
  CUSTSETTLEMENT.SETTLEAMOUNTMST,
  CUSTSETTLEMENT.SETTLEAMOUNTCUR,
  CONVERT(date, CUSTSETTLEMENT.TRANSDATE) AS TRANSDATE,
 -- CUSTSETTLEMENT.TRANSDATE,
  CUSTTRANS.TXT,
  (
  Select  CT2.TXT
  from CUSTTRANS CT2 where 
  CT2.ACCOUNTNUM= CUSTTRANS.ACCOUNTNUM
  AND 
  CT2.VOUCHER=CUSTSETTLEMENT.OFFSETTRANSVOUCHER
  AND
  CT2.DATAAREAID=CUSTTRANS.DATAAREAID
  AND
  CT2.SETTLEMENT=1
  ) as txt2
  INTO #TMPCXCCOMPORTAMIENTODETALLE
FROM
  CUSTSETTLEMENT
  INNER JOIN CUSTTRANS ON (CUSTSETTLEMENT.TRANSRECID = CUSTTRANS.RECID)
  AND (CUSTSETTLEMENT.ACCOUNTNUM = CUSTTRANS.ACCOUNTNUM)
  AND (CUSTSETTLEMENT.TRANSCOMPANY = CUSTTRANS.DATAAREAID)
WHERE
  CUSTTRANS.INVOICE=@INVOICE AND
  (CUSTTRANS.TRANSTYPE = '2' OR 
  CUSTTRANS.TRANSTYPE = '8')
  
   
  Alter Table #TMPCXCCOMPORTAMIENTODETALLE Add ID Int Identity(1, 1);
  Alter Table #TMPCXCCOMPORTAMIENTODETALLE Add OFFSETRECID bigint;


--Ahora creare un cursor para ir por cada VOUCHER y asi coger el 
--OFFSETRECID
 -- Declare a cursor to create the dynamic SQL statements
DECLARE Index_CXCCOMPORTAMIENTODETALLE CURSOR FAST_FORWARD
FOR SELECT ID,ACCOUNTNUM, INVOICE, VOUCHER, OFFSETTRANSVOUCHER
FROM #TMPCXCCOMPORTAMIENTODETALLE;


-- Open the cursor for reading
OPEN Index_CXCCOMPORTAMIENTODETALLE;
-- Loop through all the tables in the database
FETCH NEXT FROM Index_CXCCOMPORTAMIENTODETALLE
INTO @ID, @ACCOUNTNUM, @INVOICE, @VOUCHER, @OFFSETTRANSVOUCHER;

WHILE @@FETCH_STATUS =0

BEGIN -- Create ALTER INDEX statement to rebuiId inddex

  
 IF exists (Select 1 from  CUSTTRANS CT2  where CT2.ACCOUNTNUM= @ACCOUNTNUM  AND  CT2.VOUCHER=@OFFSETTRANSVOUCHER AND CT2.DATAAREAID='alph')
   BEGIN
   
       Select 
             @OFFSETRECID=CT2.OFFSETRECID             
            from
             CUSTTRANS CT2
              where 
            CT2.ACCOUNTNUM= @ACCOUNTNUM
            AND 
            CT2.VOUCHER=@OFFSETTRANSVOUCHER
             AND
            CT2.DATAAREAID='alph'
           
         Update #TMPCXCCOMPORTAMIENTODETALLE
         SET OFFSETRECID=@OFFSETRECID
         where
         ID=@ID AND
         VOUCHER=@VOUCHER
         AND
         ACCOUNTNUM=@ACCOUNTNUM
         AND
         INVOICE=@INVOICE
  
   
   END

        
FETCH NEXT FROM Index_CXCCOMPORTAMIENTODETALLE
INTO @ID, @ACCOUNTNUM, @INVOICE, @VOUCHER, @OFFSETTRANSVOUCHER;

        END

-- Get the next index

CLOSE Index_CXCCOMPORTAMIENTODETALLE;
DEALLOCATE Index_CXCCOMPORTAMIENTODETALLE;
-- FIN DEL USO DEL PRIMER CURSOR



--- Seccion es para el detalle del detalle 

DECLARE Index_CXCCOMPORTAMIENTODETALLE2 CURSOR FAST_FORWARD
FOR SELECT DISTINCT ACCOUNTNUM, INVOICE,OFFSETTRANSVOUCHER,OFFSETRECID
FROM #TMPCXCCOMPORTAMIENTODETALLE
where OFFSETRECID>0
AND  OFFSETTRANSVOUCHER LIKE 'ADLCC%';


OPEN Index_CXCCOMPORTAMIENTODETALLE2;
-- Loop through all the tables in the database
FETCH NEXT FROM Index_CXCCOMPORTAMIENTODETALLE2
INTO  @ACCOUNTNUM, @INVOICE, @OFFSETTRANSVOUCHER,@OFFSETRECID;

WHILE @@FETCH_STATUS =0
  BEGIN
        
              INSERT INTO #TMPCXCCOMPORTAMIENTOOFFSETRECID 
                (
                  ACCOUNTNUM,
                  INVOICE,
                  OFFSETTRANSVOUCHER,
                  VOUCHER,
                  TXT,
                  TRANSRECID,
                  TRANSDATE,
                  SETTLEAMOUNTMST         
                )
              SELECT 
               CUSTSETTLEMENT.ACCOUNTNUM,
               @INVOICE AS INVOICE,
               @OFFSETTRANSVOUCHER AS OFFSETTRANSVOUCHER,
               (SELECT  custtrans.VOUCHER FROM  custtrans WHERE  custtrans.RECID = CUSTSETTLEMENT.TRANSRECID ) AS VOUCHER,
               (SELECT custtrans.TXT FROM  custtrans WHERE custtrans.RECID = CUSTSETTLEMENT.TRANSRECID ) AS TXT,  
               CUSTSETTLEMENT.TRANSRECID,
               CUSTSETTLEMENT.TRANSDATE,
               CUSTSETTLEMENT.SETTLEAMOUNTMST 
            FROM
              CUSTSETTLEMENT
            WHERE
              CUSTSETTLEMENT.TRANSRECID = @OFFSETRECID
              AND
              CUSTSETTLEMENT.ACCOUNTNUM=@ACCOUNTNUM
 
      
FETCH NEXT FROM Index_CXCCOMPORTAMIENTODETALLE2
INTO  @ACCOUNTNUM, @INVOICE, @OFFSETTRANSVOUCHER,@OFFSETRECID;

  END;

CLOSE Index_CXCCOMPORTAMIENTODETALLE2;
DEALLOCATE Index_CXCCOMPORTAMIENTODETALLE2;
  

-- FIN DEL CURSOR ADLCC
-- CURSOR DIFERENTE A ADLCC

DECLARE Index_CXCCOMPORTAMIENTODETALLE3 CURSOR FAST_FORWARD
FOR SELECT DISTINCT ACCOUNTNUM, INVOICE,OFFSETTRANSVOUCHER,OFFSETRECID,SETTLEAMOUNTMST
FROM #TMPCXCCOMPORTAMIENTODETALLE
where 
OFFSETRECID>0
AND  
OFFSETTRANSVOUCHER NOT LIKE 'ADLCC%';


OPEN Index_CXCCOMPORTAMIENTODETALLE3;
-- Loop through all the tables in the database
FETCH NEXT FROM Index_CXCCOMPORTAMIENTODETALLE3
INTO  @ACCOUNTNUM, @INVOICE, @OFFSETTRANSVOUCHER,@OFFSETRECID,@SETTLEAMOUNTMST;

WHILE @@FETCH_STATUS =0
  BEGIN
        
              INSERT INTO #TMPCXCCOMPORTAMIENTOOFFSETRECID 
                (
                  ACCOUNTNUM,
                  INVOICE,
                  OFFSETTRANSVOUCHER,
                  VOUCHER,
                  TXT,
                  TRANSRECID,
                  TRANSDATE,
                  SETTLEAMOUNTMST         
                )
              SELECT 
               CUSTSETTLEMENT.ACCOUNTNUM,
               @INVOICE AS INVOICE,
               @OFFSETTRANSVOUCHER AS OFFSETTRANSVOUCHER,
               (SELECT  custtrans.VOUCHER FROM  custtrans WHERE  custtrans.RECID = CUSTSETTLEMENT.TRANSRECID ) AS VOUCHER,
               (SELECT custtrans.TXT FROM  custtrans WHERE custtrans.RECID = CUSTSETTLEMENT.TRANSRECID ) AS TXT,  
               CUSTSETTLEMENT.TRANSRECID,
               CUSTSETTLEMENT.TRANSDATE,
               CUSTSETTLEMENT.SETTLEAMOUNTMST 
            FROM
              CUSTSETTLEMENT
            WHERE
              CUSTSETTLEMENT.TRANSRECID = @OFFSETRECID
              AND
              CUSTSETTLEMENT.ACCOUNTNUM=@ACCOUNTNUM
              AND
              CUSTSETTLEMENT.SETTLEAMOUNTMST=@SETTLEAMOUNTMST
 
      
FETCH NEXT FROM Index_CXCCOMPORTAMIENTODETALLE3
INTO  @ACCOUNTNUM, @INVOICE, @OFFSETTRANSVOUCHER,@OFFSETRECID,@SETTLEAMOUNTMST;

  END;

CLOSE Index_CXCCOMPORTAMIENTODETALLE3;
DEALLOCATE Index_CXCCOMPORTAMIENTODETALLE3;


-- FIN CURSOR DIFERENTE A ADLCC

--Fin de la seccion del detalle del detalle


-- Seccion de las fechas PAGADAS

insert into #TMPFECHASPAGADAS
  (
   INVOICE,
   VOUCHER,
   TRANSDATE,
   OFFSETTRANSVOUCHER,
   SETTLEAMOUNTMST,
   TXT,
   ROWNUMBER
  ) 
  Select 
       tabla1.INVOICE,
       tabla1.VOUCHER,
       tabla1.TRANSDATE,
       tabla1.OFFSETTRANSVOUCHER,
       tabla1.SETTLEAMOUNTMST,
       tabla1.TXT,
       ROW_NUMBER() OVER(PARTITION BY tabla1.INVOICE ORDER BY tabla1.INVOICE) AS RowNumber
       from 
(
Select INVOICE,
       VOUCHER,
       TRANSDATE,
       OFFSETTRANSVOUCHER,
       SETTLEAMOUNTMST,
       txt2 as TXT
From #TMPCXCCOMPORTAMIENTODETALLE
where
OFFSETTRANSVOUCHER like 'ADCC%'
UNION
Select INVOICE,
       VOUCHER,
       TRANSDATE,
       OFFSETTRANSVOUCHER,
       SETTLEAMOUNTMST,
       TXT
From #TMPCXCCOMPORTAMIENTOOFFSETRECID
) as tabla1

-- FIN DE LA SECCION FECHAS PAGADAS

--- SECCION de tetris con las fechas de pago

 --TENGO QUE BUSCAR LAS FECHAS DE COBRO DE CADA UNA DE ESTAS FACTURAS
          Select @maxrownumber =max(ROWNUMBER)          
          from #TMPFECHASPAGADAS
          where INVOICE=@INVOICE
          GROUP BY  INVOICE;
  
          SET @intFlag = 1

           WHILE (@intFlag <= @maxrownumber) 
                BEGIN                  

                   Select @TRANSDATE=TRANSDATE 
                   from #TMPFECHASPAGADAS
                   where INVOICE=@INVOICE AND 
                   ROWNUMBER=@intFlag;

                   SET @resultFechaCobrada= dbo.LC_CXC_COMPARAR_FECHA(@TRANSDATE,@fechas30P,@fechas45P,@fechas60P,@fechas90P,@fechas120P,@fechas150P);

                        UPDATE #TMPFECHASPAGADAS
                          SET GRUPO=@resultFechaCobrada
                          where
                          INVOICE=@INVOICE AND
                          ROWNUMBER=@intFlag;
                           

                   SET @intFlag = @intFlag + 1;

                END
     
 /*          
                Select * from #TMPCXCCOMPORTAMIENTODETALLE; 
                Select * from #TMPCXCCOMPORTAMIENTOOFFSETRECID;
                Select * from #TMPFECHASPAGADAS;
*/
                

IF @opcion = 1 
BEGIN
    Select *  from #TMPCXCCOMPORTAMIENTODETALLE
    where OFFSETTRANSVOUCHER in (Select OFFSETTRANSVOUCHER from #TMPFECHASPAGADAS where GRUPO=@GRUPO)
      -- where TRANSDATE <= (Select MAX(TRANSDATE) from #TMPFECHASPAGADAS where GRUPO=@GRUPO GROUP BY GRUPO );

END

ELSE
    BEGIN
      Select * from #TMPCXCCOMPORTAMIENTOOFFSETRECID
      where OFFSETTRANSVOUCHER in (Select OFFSETTRANSVOUCHER from #TMPFECHASPAGADAS where GRUPO=@GRUPO)
        --where TRANSDATE in (Select TRANSDATE from #TMPFECHASPAGADAS where GRUPO=@GRUPO);

    END

   IF OBJECT_ID('tempdb..#TMPCXCCOMPORTAMIENTODETALLE') IS NOT NULL
    BEGIN
        DROP TABLE #TMPCXCCOMPORTAMIENTODETALLE
    END
  
    
  IF OBJECT_ID('tempdb..#TMPCXCCOMPORTAMIENTOOFFSETRECID') IS NOT NULL
    BEGIN
        DROP TABLE #TMPCXCCOMPORTAMIENTOOFFSETRECID
    END
    
       IF OBJECT_ID('tempdb..#TMPFECHASPAGADAS') IS NOT NULL
    BEGIN
        DROP TABLE #TMPFECHASPAGADAS
    END

END